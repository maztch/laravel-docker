version: '3.8'

services:
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - ${APP_PATH}:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - php
    networks:
      - laravel_network

  # PHP-FPM
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_php
    volumes:
      - ${APP_PATH}:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=${MYSQL_PORT}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_network

  # MySQL Database
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel_network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${COMPOSE_PROJECT_NAME}_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${MYSQL_PORT}
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      - mysql
    networks:
      - laravel_network

  # Redis Cache
  redis:
    image: redis:${REDIS_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - laravel_network

  # Laravel Queue Worker (optional)
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_queue
    volumes:
      - ${APP_PATH}:/var/www/html
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=${MYSQL_PORT}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
    command: php artisan queue:work --tries=3
    depends_on:
      - mysql
      - redis
      - php
    networks:
      - laravel_network

  # Laravel Scheduler (optional)
  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_scheduler
    volumes:
      - ${APP_PATH}:/var/www/html
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=${MYSQL_PORT}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
    command: crond -f
    depends_on:
      - mysql
      - redis
      - php
    networks:
      - laravel_network

  # Node.js for NPM and Frontend Assets
  node:
    image: node:${NODE_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_node
    working_dir: /var/www/html
    volumes:
      - ${APP_PATH}:/var/www/html
      - node_modules:/var/www/html/node_modules
    ports:
      - "${VITE_HMR_PORT}:3000"  # For Vite dev server
      - "${VITE_PORT}:5173"      # Alternative Vite port
    environment:
      - NODE_ENV=${NODE_ENV}
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  node_modules: